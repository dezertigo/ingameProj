"use strict";window.addEventListener("load",()=>{const t=document.querySelector(".burger"),s=document.querySelector(".header"),i=document.querySelector("body"),o=r(".header-menu");function r(e){e=document.querySelector(e);if(e)return e}function l(e){e=document.querySelectorAll(e);if(e)return e}function c(){t.classList.contains("active")&&(t.classList.remove("active"),o.classList.remove("active"),s.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",c))}if(t&&i.addEventListener("click",function(e){e.target.closest(".burger")?t.classList.contains("active")?(t.classList.remove("active"),s.classList.remove("active"),o.classList.remove("active"),i.classList.remove("lock")):(t.classList.add("active"),s.classList.add("active"),i.classList.add("lock"),o.classList.add("active"),window.addEventListener("scroll",c)):e.target.closest(".burger")||e.target.closest(".header-menu")||(t.classList.remove("active"),s.classList.remove("active"),o.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",c))}),window.innerWidth<1e3?r(".header-top__buttons").prepend(r("#cart")):r(".header-menu__container").append(r("#cart")),r(".spoiler")&&i.addEventListener("click",function(e){{var t;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),t=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}}),r(".ceo")){const E=document.querySelector(".ceo__btn");E.addEventListener("click",function(e){{var t;(e.target.closest(".ceo__preview")||e.target.closest(".ceo__btn"))&&(e.target.closest(".ceo").classList.toggle("opened"),t=document.querySelector(".ceo__preview").nextElementSibling,e.target.closest(".ceo").classList.contains("opened")?(E.textContent="Сховати",t.style.height=t.scrollHeight+"px"):(t.style.height=null,E.textContent="Дивитись більше"))}})}var e=new Swiper(".cards__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,spaceBetween:20}),n=new Swiper(".hero__swiper-cards",{speed:500,slidesPerView:1.75,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,simulateTouch:!0,breakpoints:{568:{slidesPerView:2.25},1e3:{slidesPerView:3}}});(e.controller.control=n).controller.control=e;let a=l(".cards .card");n=l(".cards .card__content"),e=l(".cards .card .card__preview");let d=[],p=(e.forEach(e=>{d.push(e.scrollHeight)}),Math.max(...d));console.log(d),console.log(p);e=l(".cards .card__body");let v=[],_=(e.forEach(e=>{v.push(e.scrollHeight)}),Math.max(...v)),u=p;a.forEach(e=>{e.style.height=p+_+"px"}),i.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let s=e.target.closest(".card").children[1].firstElementChild.scrollHeight;s>u&&a.forEach(e=>{var t=s+_;u=s,e.style.height=t+"px"})}}),n.forEach(e=>{e.style.top=`calc(100% - ${p}px)`});new Swiper(".reviews__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews__pagination",clickable:!0},navigation:{nextEl:".reviews__next",prevEl:".reviews__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:1.9299},900:{slidesPerView:2},1200:{slidesPerView:3,spaceBetween:20}}});const w=document.querySelector(".reviews-popup");document.querySelector(".reviews-popup__next");i.addEventListener("click",function(e){e.target.closest(".reviews__slide .reviews__img")&&(w.classList.add("active"),i.classList.add("lock"),m.classList.add("active"));e.target.closest(".reviews__slide .reviews__body--video")&&(w.classList.add("active"),i.classList.add("lock"),L.classList.add("active"));e.target.closest(".reviews__slide .reviews__footer-btn")&&(w.classList.add("active"),i.classList.add("lock"),g.classList.add("active"));e.target.closest(".reviews-popup__close")&&(w.classList.remove("active"),i.classList.remove("lock"),(m.classList.contains("active")||g.classList.contains("active")||L.classList.contains("active"))&&(m.classList.remove("active"),g.classList.remove("active"),L.classList.remove("active")))});const m=document.querySelector(".reviews-popup__item--img"),g=document.querySelector(".reviews-popup__item--text"),L=document.querySelector(".reviews-popup__item--video");function b(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),l(".footer-top__subscribe .not")[0].classList.remove("hover"),l(".footer-top__subscribe .not")[1].classList.remove("hover"),l(".footer-top__subscribe .not")[0].classList.add("clicked"),l(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",h)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(l(".footer-top__subscribe .not")[0].classList.add("hover"),l(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",b),document.body.addEventListener("pointerout",y))}function h(e){console.log("up"),l(".footer-top__subscribe .not")[0].classList.remove("clicked"),l(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",b),document.body.removeEventListener("pointerup",h),document.body.removeEventListener("pointerout",y)}function y(e){l(".footer-top__subscribe .not")[0].classList.remove("hover"),l(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",b),document.body.removeEventListener("pointerout",y)}i.addEventListener("click",function(e){(e.target.closest(".reviews-popup__video svg")||e.target.closest(".reviews-popup__poster"))&&(r("video").style.zIndex="5",r("video").setAttribute("controls","true"),r("video").play(),r(".reviews-popup__poster").style.opacity="0")}),document.body.addEventListener("pointerover",b);new Swiper(".step3__swiper",{speed:500,slidesPerView:3,slidesPerGroup:3,initialSlide:0,simulateTouch:!0,spaceBetween:20,pagination:{el:".step3__pagination",clickable:!0},navigation:{nextEl:".slider__next",prevEl:".slider__prev"},navigation:{nextEl:".step3__btn-right",prevEl:".step3__btn-left"},breakpoints:{500:{slidesPerView:4,slidesPerGroup:4},620:{slidesPerView:5,slidesPerGroup:5},740:{slidesPerView:7,slidesPerGroup:7}}}),new Swiper(".vertical-gallery__swiper-big",{speed:500,slidesPerView:1,initialSlide:0,simulateTouch:!0,spaceBetween:12,thumbs:{swiper:{el:".vertical-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:14},600:{slidesPerView:5},1e3:{spaceBetween:20,slidesPerView:5},1200:{slidesPerView:6}}}}});function f(){var e,t;1e3<=window.innerWidth&&(e=document.querySelector(".horizontal-gallery__small-wrap"),t=document.querySelector(".horizontal-gallery__big-wrap").getBoundingClientRect().height,e.style.maxHeight=t+"px")}window.addEventListener("resize",f),f();new Swiper(".horizontal-gallery__swiper-big",{speed:500,slidesPerView:1,simulateTouch:!0,spaceBetween:12,sliderPerColumn:1,breakpoints:{1e3:{spaceBetween:20}},thumbs:{swiper:{el:".horizontal-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:10},600:{slidesPerView:5},700:{slidesPerView:6},1e3:{spaceBetween:20,slidesPerView:6,direction:"vertical"}}}}});r("body.quest")&&new Swiper(".step1__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".step1__pagination",clickable:!0},navigation:{nextEl:".step1__next",prevEl:".step1__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:2.048},900:{slidesPerView:2.2},1200:{slidesPerView:2.5,spaceBetween:20},1400:{slidesPerView:3}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
