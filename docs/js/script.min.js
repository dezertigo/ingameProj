"use strict";window.addEventListener("load",()=>{const t=document.querySelector(".burger"),s=document.querySelector(".header"),i=document.querySelector("body"),o=r(".header-menu");function r(e){e=document.querySelector(e);if(e)return e}function c(e){e=document.querySelectorAll(e);if(e)return e}function l(){t.classList.contains("active")&&(t.classList.remove("active"),o.classList.remove("active"),s.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}if(t&&i.addEventListener("click",function(e){e.target.closest(".burger")?t.classList.contains("active")?(t.classList.remove("active"),s.classList.remove("active"),o.classList.remove("active"),i.classList.remove("lock")):(t.classList.add("active"),s.classList.add("active"),i.classList.add("lock"),o.classList.add("active"),window.addEventListener("scroll",l)):e.target.closest(".burger")||e.target.closest(".header-menu")||(t.classList.remove("active"),s.classList.remove("active"),o.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}),window.innerWidth<1e3?r(".header-top__buttons").prepend(r("#cart")):r(".header-menu__container").append(r("#cart")),r(".spoiler")&&i.addEventListener("click",function(e){{var t;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),t=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}}),r(".ceo")){const S=document.querySelector(".ceo__btn");S.addEventListener("click",function(e){{var t;(e.target.closest(".ceo__preview")||e.target.closest(".ceo__btn"))&&(e.target.closest(".ceo").classList.toggle("opened"),t=document.querySelector(".ceo__preview").nextElementSibling,e.target.closest(".ceo").classList.contains("opened")?(S.textContent="Сховати",t.style.height=t.scrollHeight+"px"):(t.style.height=null,S.textContent="Дивитись більше"))}})}new Swiper(".cards__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,spaceBetween:20,thumbs:{swiper:{el:".hero__swiper-cards",slidesPerView:3}}});let n=c(".cards .card");var e=c(".cards .card__content"),a=c(".cards .card .card__preview");let d=[],p=(a.forEach(e=>{d.push(e.scrollHeight)}),Math.max(...d));console.log(d),console.log(p);a=c(".cards .card__body");let v=[],_=(a.forEach(e=>{v.push(e.scrollHeight)}),Math.max(...v)),u=p;n.forEach(e=>{e.style.height=p+_+"px"}),i.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let s=e.target.closest(".card").children[1].firstElementChild.scrollHeight;s>u&&n.forEach(e=>{var t=s+_;u=s,e.style.height=t+"px"})}}),e.forEach(e=>{e.style.top=`calc(100% - ${p}px)`});new Swiper(".reviews__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews__pagination",clickable:!0},navigation:{nextEl:".reviews__next",prevEl:".reviews__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:1.9299},900:{slidesPerView:2},1200:{slidesPerView:3,spaceBetween:20}}});const w=document.querySelector(".reviews-popup");a=document.querySelector(".reviews__feedback");const m=document.querySelector(".feedback-popup");e=document.querySelector(".feedback-popup__close");a.addEventListener("click",function(){m.classList.add("active"),setTimeout(()=>{i.classList.add("lock")},300)}),e.addEventListener("click",function(){m.classList.remove("active"),i.classList.remove("lock")}),i.addEventListener("click",function(e){e.target.closest(".reviews__slide .reviews__img")&&(w.classList.add("active"),i.classList.add("lock"),g.classList.add("active"));e.target.closest(".reviews__slide .reviews__body--video")&&(w.classList.add("active"),i.classList.add("lock"),b.classList.add("active"));e.target.closest(".reviews__slide .reviews__footer-btn")&&(w.classList.add("active"),i.classList.add("lock"),L.classList.add("active"));e.target.closest(".reviews-popup__close")&&(w.classList.remove("active"),i.classList.remove("lock"),(g.classList.contains("active")||L.classList.contains("active")||b.classList.contains("active"))&&(g.classList.remove("active"),L.classList.remove("active"),b.classList.remove("active")))});const g=document.querySelector(".reviews-popup__item--img"),L=document.querySelector(".reviews-popup__item--text"),b=document.querySelector(".reviews-popup__item--video");function h(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),c(".footer-top__subscribe .not")[0].classList.remove("hover"),c(".footer-top__subscribe .not")[1].classList.remove("hover"),c(".footer-top__subscribe .not")[0].classList.add("clicked"),c(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",y)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(c(".footer-top__subscribe .not")[0].classList.add("hover"),c(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",h),document.body.addEventListener("pointerout",f))}function y(e){console.log("up"),c(".footer-top__subscribe .not")[0].classList.remove("clicked"),c(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",h),document.body.removeEventListener("pointerup",y),document.body.removeEventListener("pointerout",f)}function f(e){c(".footer-top__subscribe .not")[0].classList.remove("hover"),c(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",h),document.body.removeEventListener("pointerout",f)}i.addEventListener("click",function(e){(e.target.closest(".reviews-popup__video svg")||e.target.closest(".reviews-popup__poster"))&&(r("video").style.zIndex="5",r("video").setAttribute("controls","true"),r("video").play(),r(".reviews-popup__poster").style.opacity="0")}),document.body.addEventListener("pointerover",h);new Swiper(".step3__swiper",{speed:500,slidesPerView:3,slidesPerGroup:3,initialSlide:0,simulateTouch:!0,spaceBetween:20,pagination:{el:".step3__pagination",clickable:!0},navigation:{nextEl:".slider__next",prevEl:".slider__prev"},navigation:{nextEl:".step3__btn-right",prevEl:".step3__btn-left"},breakpoints:{500:{slidesPerView:4,slidesPerGroup:4},620:{slidesPerView:5,slidesPerGroup:5},740:{slidesPerView:7,slidesPerGroup:7}}}),new Swiper(".vertical-gallery__swiper-big",{speed:500,slidesPerView:1,initialSlide:0,simulateTouch:!0,spaceBetween:12,thumbs:{swiper:{el:".vertical-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:14},600:{slidesPerView:5},1e3:{spaceBetween:20,slidesPerView:5},1200:{slidesPerView:6}}}}});function E(){var e,t;1e3<=window.innerWidth&&(e=document.querySelector(".horizontal-gallery__small-wrap"),t=document.querySelector(".horizontal-gallery__image-big").getBoundingClientRect().height,e.style.maxHeight=t+"px")}window.addEventListener("resize",E),E();new Swiper(".horizontal-gallery__swiper-big",{speed:500,slidesPerView:1,simulateTouch:!0,spaceBetween:12,sliderPerColumn:1,breakpoints:{1e3:{spaceBetween:20}},thumbs:{swiper:{el:".horizontal-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:10},600:{slidesPerView:5},700:{slidesPerView:6},1e3:{spaceBetween:20,slidesPerView:6,direction:"vertical"}}}}});function k(){var e=this.innerText;this.closest(".select").querySelector(".select__current").innerText=e}r("body.quest")&&(i.addEventListener("click",function(e){{var t;e.target.closest(".step2__preview")&&(e.target.closest(".step2__spoiler").classList.toggle("opened"),t=e.target.closest(".step2__preview").nextElementSibling,e.target.closest(".step2__spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}}),document.querySelectorAll(".select__label").forEach(e=>{e.addEventListener("click",k)}),new Swiper(".step1__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".step1__pagination",clickable:!0},navigation:{nextEl:".step1__next",prevEl:".step1__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:2.048},900:{slidesPerView:2.2},1200:{slidesPerView:2.5,spaceBetween:20},1400:{slidesPerView:3}}}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
