"use strict";window.addEventListener("load",()=>{const s=document.querySelector(".burger"),t=document.querySelector(".header"),i=document.querySelector("body"),r=e(".header-menu");function e(e){e=document.querySelector(e);if(e)return e}function o(e){e=document.querySelectorAll(e);if(e)return e}function l(){s.classList.contains("active")&&(s.classList.remove("active"),r.classList.remove("active"),t.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}if(s&&i.addEventListener("click",function(e){e.target.closest(".burger")?s.classList.contains("active")?(s.classList.remove("active"),t.classList.remove("active"),r.classList.remove("active"),i.classList.remove("lock")):(s.classList.add("active"),t.classList.add("active"),i.classList.add("lock"),r.classList.add("active"),window.addEventListener("scroll",l)):e.target.closest(".burger")||e.target.closest(".header-menu")||(s.classList.remove("active"),t.classList.remove("active"),r.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}),window.innerWidth<1e3?e(".header-top__buttons").prepend(e("#cart")):e(".header-menu__container").append(e("#cart")),e(".spoiler")&&i.addEventListener("click",function(e){{var s;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),s=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?s.style.height=s.scrollHeight+"px":s.style.height=null)}}),e(".ceo")){const h=document.querySelector(".ceo__btn");h.addEventListener("click",function(e){{var s;(e.target.closest(".ceo__preview")||e.target.closest(".ceo__btn"))&&(e.target.closest(".ceo").classList.toggle("opened"),s=document.querySelector(".ceo__preview").nextElementSibling,e.target.closest(".ceo").classList.contains("opened")?(h.textContent="Сховати",s.style.height=s.scrollHeight+"px"):(s.style.height=null,h.textContent="Дивитись більше"))}})}var c=new Swiper(".cards__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,spaceBetween:20}),n=new Swiper(".hero__swiper-cards",{speed:500,slidesPerView:1.75,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,simulateTouch:!0,breakpoints:{568:{slidesPerView:2.25},1e3:{slidesPerView:3}}});(c.controller.control=n).controller.control=c;let a=o(".cards .card");n=o(".cards .card__content"),c=o(".cards .card .card__preview");let d=[],p=(c.forEach(e=>{d.push(e.scrollHeight)}),Math.max(...d));c=o(".cards .card__body");let v=[],w=(c.forEach(e=>{v.push(e.scrollHeight)}),Math.max(...v)),u=p;a.forEach(e=>{e.style.height=p+w+"px"}),i.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let t=e.target.closest(".card").children[1].firstElementChild.scrollHeight;t>u&&a.forEach(e=>{var s=t+w;u=t,e.style.height=s+"px"})}}),n.forEach(e=>{e.style.top=`calc(100% - ${p}px)`});new Swiper(".reviews__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews__pagination",clickable:!0},navigation:{nextEl:".reviews__next",prevEl:".reviews__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:1.9299},900:{slidesPerView:2},1100:{slidesPerView:3,spaceBetween:20}}}),new Swiper(".reviews-popup__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews-popup__pagination",clickable:!0},navigation:{nextEl:".reviews-popup__next",prevEl:".reviews-popup__prev"}});function _(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),o(".footer-top__subscribe .not")[0].classList.remove("hover"),o(".footer-top__subscribe .not")[1].classList.remove("hover"),o(".footer-top__subscribe .not")[0].classList.add("clicked"),o(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",m)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(o(".footer-top__subscribe .not")[0].classList.add("hover"),o(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",_),document.body.addEventListener("pointerout",b))}function m(e){console.log("up"),o(".footer-top__subscribe .not")[0].classList.remove("clicked"),o(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",_),document.body.removeEventListener("pointerup",m),document.body.removeEventListener("pointerout",b)}function b(e){o(".footer-top__subscribe .not")[0].classList.remove("hover"),o(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",_),document.body.removeEventListener("pointerout",b)}document.body.addEventListener("pointerover",_);new Swiper(".step3__swiper",{speed:500,slidesPerView:3,slidesPerGroup:3,initialSlide:0,simulateTouch:!0,spaceBetween:20,freeMode:!0,breakpoints:{500:{slidesPerView:4,slidesPerGroup:4},620:{slidesPerView:5,slidesPerGroup:5},740:{slidesPerView:7,slidesPerGroup:7}}}),new Swiper(".vertical-gallery__swiper-big",{speed:500,slidesPerView:1,initialSlide:0,simulateTouch:!0,spaceBetween:12,thumbs:{swiper:{el:".vertical-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:14},600:{slidesPerView:5},1e3:{spaceBetween:20,slidesPerView:5},1200:{slidesPerView:6}}}}}),new Swiper(".horizontal-gallery__swiper-big",{speed:500,slidesPerView:1,simulateTouch:!0,spaceBetween:12,sliderPerColumn:1,thumbs:{swiper:{el:".horizontal-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:10},600:{slidesPerView:5},700:{slidesPerView:6},1e3:{spaceBetween:20,slidesPerView:6}}}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
