"use strict";window.addEventListener("load",()=>{function l(e){e=document.querySelector(e);if(e)return e}function a(e){e=document.querySelectorAll(e);if(e)return e}const c=l(".burger"),n=l(".header"),d=l("body"),p=l(".header-menu");function _(){c.classList.contains("active")&&(c.classList.remove("active"),p.classList.remove("active"),n.classList.remove("active"),d.classList.remove("lock"),window.removeEventListener("scroll",_))}function s(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),a(".footer-top__subscribe .not")[0].classList.remove("hover"),a(".footer-top__subscribe .not")[1].classList.remove("hover"),a(".footer-top__subscribe .not")[0].classList.add("clicked"),a(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",t)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(a(".footer-top__subscribe .not")[0].classList.add("hover"),a(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",s),document.body.addEventListener("pointerout",i))}function t(e){console.log("up"),a(".footer-top__subscribe .not")[0].classList.remove("clicked"),a(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",s),document.body.removeEventListener("pointerup",t),document.body.removeEventListener("pointerout",i)}function i(e){a(".footer-top__subscribe .not")[0].classList.remove("hover"),a(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",s),document.body.removeEventListener("pointerout",i)}if(d.addEventListener("click",function(e){e.target.closest(".burger")?c.classList.contains("active")?(c.classList.remove("active"),n.classList.remove("active"),p.classList.remove("active"),d.classList.remove("lock")):(c.classList.add("active"),n.classList.add("active"),d.classList.add("lock"),p.classList.add("active"),window.addEventListener("scroll",_)):e.target.closest(".burger")||e.target.closest(".header-menu__container")||!l(".burger").classList.contains("active")||(c.classList.remove("active"),n.classList.remove("active"),p.classList.remove("active"),d.classList.remove("lock"),window.removeEventListener("scroll",_));(e.target.closest(".ceo__preview")||e.target.closest(".ceo__btn"))&&(e.target.closest(".ceo").classList.toggle("opened"),s=l(".ceo__preview").nextElementSibling,e.target.closest(".ceo").classList.contains("opened")?(l(".ceo__btn").textContent="Сховати",s.style.height=s.scrollHeight+"px"):(s.style.height=null,l(".ceo__btn").textContent="Дивитись більше"));{var s;e.target.closest(".step2__preview")&&(e.target.closest(".step2__spoiler").classList.toggle("opened"),s=e.target.closest(".step2__preview").nextElementSibling,e.target.closest(".step2__spoiler").classList.contains("opened")?s.style.height=s.scrollHeight+"px":s.style.height=null)}e.target.closest(".select__label")&&(l(".select__current").textContent=e.target.closest(".select__label").textContent);{var t,i,r,o;l(".reviews")&&(t=l(".reviews-popup"),i=l(".reviews-popup__item--img"),r=l(".reviews-popup__item--text"),o=l(".reviews-popup__item--video"),e.target.closest(".reviews__feedback")?(l(".feedback-popup").classList.add("active"),d.classList.add("lock")):e.target.closest(".feedback-popup__close")&&(l(".feedback-popup").classList.remove("active"),d.classList.remove("lock")),e.target.closest(".reviews__slide .reviews__img")&&(t.classList.add("active"),d.classList.add("lock"),i.classList.add("active")),e.target.closest(".reviews__slide .reviews__body--video")&&(t.classList.add("active"),d.classList.add("lock"),o.classList.add("active")),e.target.closest(".reviews__slide .reviews__footer-btn")&&(t.classList.add("active"),d.classList.add("lock"),r.classList.add("active")),e.target.closest(".reviews-popup__close")&&(t.classList.remove("active"),d.classList.remove("lock"),(i.classList.contains("active")||r.classList.contains("active")||o.classList.contains("active"))&&(i.classList.remove("active"),r.classList.remove("active"),o.classList.remove("active"))))}}),window.innerWidth<1e3?l(".header-top__buttons").prepend(l("#cart")):l(".header-menu__container").append(l("#cart")),document.body.addEventListener("pointerover",s),l(".spoiler")&&d.addEventListener("click",function(e){{var s;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),s=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?s.style.height=s.scrollHeight+"px":s.style.height=null)}}),l("body.home .cards__swiper")&&new Swiper(".cards__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,spaceBetween:20,thumbs:{swiper:{el:".hero__swiper-cards",slidesPerView:3}}}),l(".cards")){let s=a(".cards .card");var e=a(".cards .card__content"),v=a(".cards .card .card__preview");let t=[],i=(v.forEach(e=>{t.push(e.scrollHeight)}),Math.max(...t));v=a(".cards .card__body");let r=[],o=(v.forEach(e=>{r.push(e.scrollHeight)}),Math.max(...r)),l=i;s.forEach(e=>{e.style.height=i+o+"px"}),d.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let t=e.target.closest(".card").children[1].firstElementChild.scrollHeight;t>l&&s.forEach(e=>{var s=t+o;l=t,e.style.height=s+"px"})}}),e.forEach(e=>{e.style.top=`calc(100% - ${i}px)`})}function r(){var e,s;1e3<=window.innerWidth&&(e=l(".horizontal-gallery__small-wrap"),s=l(".horizontal-gallery__image-big").getBoundingClientRect().height,e.style.maxHeight=s+"px")}l(".reviews__slider")&&new Swiper(".reviews__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews__pagination",clickable:!0},navigation:{nextEl:".reviews__next",prevEl:".reviews__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:1.9299},900:{slidesPerView:2},1200:{slidesPerView:3,spaceBetween:20}}}),l(".step3__swiper")&&new Swiper(".step3__swiper",{speed:500,slidesPerView:3,slidesPerGroup:3,initialSlide:0,simulateTouch:!0,spaceBetween:20,pagination:{el:".step3__pagination",clickable:!0},navigation:{nextEl:".slider__next",prevEl:".slider__prev"},navigation:{nextEl:".step3__btn-right",prevEl:".step3__btn-left"},breakpoints:{500:{slidesPerView:4,slidesPerGroup:4},620:{slidesPerView:5,slidesPerGroup:5},740:{slidesPerView:7,slidesPerGroup:7}}}),l(".vertical-gallery__swiper-big")&&new Swiper(".vertical-gallery__swiper-big",{speed:500,slidesPerView:1,initialSlide:0,simulateTouch:!0,spaceBetween:12,thumbs:{swiper:{el:".vertical-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:14},600:{slidesPerView:5},1e3:{spaceBetween:20,slidesPerView:5},1200:{slidesPerView:6}}}}}),l(".horizontal-gallery__swiper-big")&&(new Swiper(".horizontal-gallery__swiper-big",{speed:500,slidesPerView:1,simulateTouch:!0,spaceBetween:12,sliderPerColumn:1,breakpoints:{1e3:{spaceBetween:20}},thumbs:{swiper:{el:".horizontal-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:10},600:{slidesPerView:5},700:{slidesPerView:6},1e3:{spaceBetween:20,slidesPerView:6,direction:"vertical"}}}}}),window.addEventListener("resize",r),r()),l(".step1__swiper")&&new Swiper(".step1__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".step1__pagination",clickable:!0},navigation:{nextEl:".step1__next",prevEl:".step1__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:2.048},900:{slidesPerView:2.2},1200:{slidesPerView:2.5,spaceBetween:20},1400:{slidesPerView:3}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
