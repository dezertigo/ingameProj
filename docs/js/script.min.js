"use strict";window.addEventListener("load",()=>{const t=document.querySelector(".burger"),o=document.querySelector(".header"),s=document.querySelector("body");function e(e){e=document.querySelector(e);if(e)return e}function r(e){e=document.querySelectorAll(e);if(e)return e}function i(){t.classList.contains("active")&&(t.classList.remove("active"),menu.classList.remove("active"),o.classList.remove("active"),s.classList.remove("lock"),window.removeEventListener("scroll",i))}t&&s.addEventListener("click",function(e){e.target.closest(".burger")?t.classList.contains("active")?(t.classList.remove("active"),o.classList.remove("active"),s.classList.remove("lock")):(t.classList.add("active"),o.classList.add("active"),s.classList.add("lock"),window.addEventListener("scroll",i)):e.target.closest(".burger")||e.target.closest(".menu")||(t.classList.remove("active"),o.classList.remove("active"),s.classList.remove("lock"),window.removeEventListener("scroll",i))}),window.innerWidth<1e3?e(".header-top__buttons").prepend(e("#cart")):e(".header-menu__container").append(e("#cart")),e(".spoiler")&&s.addEventListener("click",function(e){{var t;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),t=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}});new Swiper(".hero__swiper-cards",{speed:500,slidesPerView:1.75,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,breakpoints:{568:{slidesPerView:2.25},1e3:{slidesPerView:3}}});let c=r(".cards .card");var n=r(".cards .card__content"),a=r(".cards .card .card__preview");let l=[],d=(a.forEach(e=>{l.push(e.scrollHeight)}),Math.max(...l));a=r(".cards .card__body");let v=[],u=(a.forEach(e=>{v.push(e.scrollHeight)}),Math.max(...v)),p=d;function m(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),r(".footer-top__subscribe .not")[0].classList.remove("hover"),r(".footer-top__subscribe .not")[1].classList.remove("hover"),r(".footer-top__subscribe .not")[0].classList.add("clicked"),r(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",L)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(r(".footer-top__subscribe .not")[0].classList.add("hover"),r(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",m),document.body.addEventListener("pointerout",b))}function L(e){console.log("up"),r(".footer-top__subscribe .not")[0].classList.remove("clicked"),r(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",m),document.body.removeEventListener("pointerup",L),document.body.removeEventListener("pointerout",b)}function b(e){r(".footer-top__subscribe .not")[0].classList.remove("hover"),r(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",m),document.body.removeEventListener("pointerout",b)}c.forEach(e=>{e.style.height=d+u+"px"}),s.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let o=e.target.closest(".card").children[1].firstElementChild.scrollHeight;o>p&&c.forEach(e=>{var t=o+u;p=o,e.style.height=t+"px"})}}),n.forEach(e=>{e.style.top=`calc(100% - ${d}px)`}),document.body.addEventListener("pointerover",m)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
