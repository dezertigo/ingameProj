"use strict";window.addEventListener("load",()=>{const t=document.querySelector(".burger"),s=document.querySelector(".header"),i=document.querySelector("body"),r=o(".header-menu");function o(e){e=document.querySelector(e);if(e)return e}function c(e){e=document.querySelectorAll(e);if(e)return e}function l(){t.classList.contains("active")&&(t.classList.remove("active"),r.classList.remove("active"),s.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}if(t&&i.addEventListener("click",function(e){e.target.closest(".burger")?t.classList.contains("active")?(t.classList.remove("active"),s.classList.remove("active"),r.classList.remove("active"),i.classList.remove("lock")):(t.classList.add("active"),s.classList.add("active"),i.classList.add("lock"),r.classList.add("active"),window.addEventListener("scroll",l)):e.target.closest(".burger")||e.target.closest(".header-menu")||(t.classList.remove("active"),s.classList.remove("active"),r.classList.remove("active"),i.classList.remove("lock"),window.removeEventListener("scroll",l))}),window.innerWidth<1e3?o(".header-top__buttons").prepend(o("#cart")):o(".header-menu__container").append(o("#cart")),o(".spoiler")&&i.addEventListener("click",function(e){{var t;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),t=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}}),o(".ceo")){const k=document.querySelector(".ceo__btn");k.addEventListener("click",function(e){{var t;(e.target.closest(".ceo__preview")||e.target.closest(".ceo__btn"))&&(e.target.closest(".ceo").classList.toggle("opened"),t=document.querySelector(".ceo__preview").nextElementSibling,e.target.closest(".ceo").classList.contains("opened")?(k.textContent="Сховати",t.style.height=t.scrollHeight+"px"):(t.style.height=null,k.textContent="Дивитись більше"))}})}var e=new Swiper(".cards__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,spaceBetween:20}),n=new Swiper(".hero__swiper-cards",{speed:500,slidesPerView:1.75,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,simulateTouch:!0,breakpoints:{568:{slidesPerView:2.25},1e3:{slidesPerView:3}}});(e.controller.control=n).controller.control=e;let a=c(".cards .card");n=c(".cards .card__content"),e=c(".cards .card .card__preview");let d=[],p=(e.forEach(e=>{d.push(e.scrollHeight)}),Math.max(...d));e=c(".cards .card__body");let v=[],u=(e.forEach(e=>{v.push(e.scrollHeight)}),Math.max(...v)),_=p;a.forEach(e=>{e.style.height=p+u+"px"}),i.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let s=e.target.closest(".card").children[1].firstElementChild.scrollHeight;s>_&&a.forEach(e=>{var t=s+u;_=s,e.style.height=t+"px"})}}),n.forEach(e=>{e.style.top=`calc(100% - ${p}px)`});new Swiper(".reviews__slider",{loop:!0,speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".reviews__pagination",clickable:!0},navigation:{nextEl:".reviews__next",prevEl:".reviews__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:1.9299},900:{slidesPerView:2},1200:{slidesPerView:3,spaceBetween:20}}});const w=document.querySelector(".reviews-popup");e=document.querySelector(".reviews__feedback");const m=document.querySelector(".feedback-popup");n=document.querySelector(".feedback-popup__close");e.addEventListener("click",function(){m.classList.add("active"),setTimeout(()=>{i.classList.add("lock")},300)}),n.addEventListener("click",function(){m.classList.remove("active"),i.classList.remove("lock")}),i.addEventListener("click",function(e){e.target.closest(".reviews__slide .reviews__img")&&(w.classList.add("active"),i.classList.add("lock"),g.classList.add("active"));e.target.closest(".reviews__slide .reviews__body--video")&&(w.classList.add("active"),i.classList.add("lock"),b.classList.add("active"));e.target.closest(".reviews__slide .reviews__footer-btn")&&(w.classList.add("active"),i.classList.add("lock"),L.classList.add("active"));e.target.closest(".reviews-popup__close")&&(w.classList.remove("active"),i.classList.remove("lock"),(g.classList.contains("active")||L.classList.contains("active")||b.classList.contains("active"))&&(g.classList.remove("active"),L.classList.remove("active"),b.classList.remove("active")))});const g=document.querySelector(".reviews-popup__item--img"),L=document.querySelector(".reviews-popup__item--text"),b=document.querySelector(".reviews-popup__item--video");function h(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),c(".footer-top__subscribe .not")[0].classList.remove("hover"),c(".footer-top__subscribe .not")[1].classList.remove("hover"),c(".footer-top__subscribe .not")[0].classList.add("clicked"),c(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",y)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(c(".footer-top__subscribe .not")[0].classList.add("hover"),c(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",h),document.body.addEventListener("pointerout",f))}function y(e){console.log("up"),c(".footer-top__subscribe .not")[0].classList.remove("clicked"),c(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",h),document.body.removeEventListener("pointerup",y),document.body.removeEventListener("pointerout",f)}function f(e){c(".footer-top__subscribe .not")[0].classList.remove("hover"),c(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",h),document.body.removeEventListener("pointerout",f)}i.addEventListener("click",function(e){(e.target.closest(".reviews-popup__video svg")||e.target.closest(".reviews-popup__poster"))&&(o("video").style.zIndex="5",o("video").setAttribute("controls","true"),o("video").play(),o(".reviews-popup__poster").style.opacity="0")}),document.body.addEventListener("pointerover",h);new Swiper(".step3__swiper",{speed:500,slidesPerView:3,slidesPerGroup:3,initialSlide:0,simulateTouch:!0,spaceBetween:20,pagination:{el:".step3__pagination",clickable:!0},navigation:{nextEl:".slider__next",prevEl:".slider__prev"},navigation:{nextEl:".step3__btn-right",prevEl:".step3__btn-left"},breakpoints:{500:{slidesPerView:4,slidesPerGroup:4},620:{slidesPerView:5,slidesPerGroup:5},740:{slidesPerView:7,slidesPerGroup:7}}}),new Swiper(".vertical-gallery__swiper-big",{speed:500,slidesPerView:1,initialSlide:0,simulateTouch:!0,spaceBetween:12,thumbs:{swiper:{el:".vertical-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:14},600:{slidesPerView:5},1e3:{spaceBetween:20,slidesPerView:5},1200:{slidesPerView:6}}}}});function E(){var e,t;1e3<=window.innerWidth&&(e=document.querySelector(".horizontal-gallery__small-wrap"),t=document.querySelector(".horizontal-gallery__big-wrap").getBoundingClientRect().height,e.style.maxHeight=t+"px")}window.addEventListener("resize",E),E();new Swiper(".horizontal-gallery__swiper-big",{speed:500,slidesPerView:1,simulateTouch:!0,spaceBetween:12,sliderPerColumn:1,breakpoints:{1e3:{spaceBetween:20}},thumbs:{swiper:{el:".horizontal-gallery__swiper-small",slidesPerView:3,spaceBetween:12,breakpoints:{500:{slidesPerView:4,spaceBetween:10},600:{slidesPerView:5},700:{slidesPerView:6},1e3:{spaceBetween:20,slidesPerView:6,direction:"vertical"}}}}});function S(){var e=this.innerText;this.closest(".select").querySelector(".select__current").innerText=e}o("body.quest")&&(i.addEventListener("click",function(e){{var t;e.target.closest(".step2__preview")&&(e.target.closest(".step2__spoiler").classList.toggle("opened"),t=e.target.closest(".step2__preview").nextElementSibling,e.target.closest(".step2__spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}}),document.querySelectorAll(".select__label").forEach(e=>{e.addEventListener("click",S)}),new Swiper(".step1__swiper",{speed:500,slidesPerView:1,initialSlide:1,simulateTouch:!0,centeredSlides:!0,slideToClickedSlide:!0,spaceBetween:24,pagination:{el:".step1__pagination",clickable:!0},navigation:{nextEl:".step1__next",prevEl:".step1__prev"},breakpoints:{568:{slidesPerView:1.5},700:{slidesPerView:2.048},900:{slidesPerView:2.2},1200:{slidesPerView:2.5,spaceBetween:20},1400:{slidesPerView:3}}}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXMiOlsic2NyaXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcclxuICAgY29uc3QgYnVyZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXJnZXJcIiksXHJcbiAgICAgIGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGVyXCIpLFxyXG4gICAgICBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIiksXHJcbiAgICAgIG1lbnUgPSBxcyhcIi5oZWFkZXItbWVudVwiKTtcclxuICAgZnVuY3Rpb24gcXMoZWxlbWVudCkge1xyXG4gICAgICBsZXQgbmV3RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xyXG4gICAgICBpZiAobmV3RWwpIHJldHVybiBuZXdFbDtcclxuICAgfVxyXG4gICBmdW5jdGlvbiBxYShlbGVtZW50KSB7XHJcbiAgICAgIGxldCBuZXdFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZWxlbWVudCk7XHJcbiAgICAgIGlmIChuZXdFbCkgcmV0dXJuIG5ld0VsO1xyXG4gICB9XHJcblxyXG4gICAvLyBsZXQgdGh1ID0gMDtcclxuICAgLy8gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAvLyAgICBxcyhcIi5oZXJvIHBcIikuc3R5bGUuY29sb3IgPSBgaHNsKCR7dGh1fSwgMTAwJSwgNTAlKWA7XHJcbiAgIC8vICAgIHRodSsrO1xyXG4gICAvLyAgICBpZiAodGh1ID09IDM1OCkgdGh1ID0gMDtcclxuICAgLy8gICAgY29uc29sZS5sb2codGh1KTtcclxuICAgLy8gfSwgMTApO1xyXG4gICAvLyAhIEJ1cmdlclxyXG4gICBpZiAoYnVyZ2VyKSB7XHJcbiAgICAgIGJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGJ1cmdlclRvZ2dsZSk7XHJcbiAgICAgIGZ1bmN0aW9uIGJ1cmdlclRvZ2dsZShlKSB7XHJcbiAgICAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLmJ1cmdlclwiKSkge1xyXG4gICAgICAgICAgICBpZiAoYnVyZ2VyLmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICBidXJnZXIuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwibG9ja1wiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgYnVyZ2VyLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICBib2R5LmNsYXNzTGlzdC5hZGQoXCJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICBtZW51LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIGNsb3NlQnVyZ2VyKTsgLy8g0JfQsNC60YDRi9Cy0LDQtdGCINCx0YPRgNCz0LXRgCDQv9GA0Lgg0YHQutGA0L7Qu9C70LUg0LIg0YLQvtC8INGB0LvRg9GH0LDQtSwg0LrQvtCz0LTQsCDQtNC70Y8gQm9keSDQvdC1INC30LDQtNCw0L0g0LrQu9Cw0YHRgSAnbG9jaydcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICB9IGVsc2UgaWYgKCFlLnRhcmdldC5jbG9zZXN0KFwiLmJ1cmdlclwiKSAmJiAhZS50YXJnZXQuY2xvc2VzdChcIi5oZWFkZXItbWVudVwiKSkge1xyXG4gICAgICAgICAgICBidXJnZXIuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwibG9ja1wiKTtcclxuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgY2xvc2VCdXJnZXIpO1xyXG4gICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZnVuY3Rpb24gY2xvc2VCdXJnZXIoKSB7XHJcbiAgICAgICAgIC8v0J3QtdC+0LHRj9C30LDRgtC10LvRjNC90LDRjyDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3QsNGPINC/0YDQvtCy0LXRgNC60LBcclxuICAgICAgICAgaWYgKGJ1cmdlci5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIikpIHtcclxuICAgICAgICAgICAgYnVyZ2VyLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIG1lbnUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImxvY2tcIik7XHJcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIGNsb3NlQnVyZ2VyKTtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuICAgLy8gISBIZWFkZXJcclxuICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgbW92ZUNhcnQpOyAvLyB0b2RvINC90LDQv9C40YHQsNGC0Ywg0L3QtSDQv9GA0Lgg0YDQtdGB0LDQudC30LUsINCwINC/0YDQuCDQv9C10YDQtdCy0L7RgNC+0YLQtSDQvNC+0LHQuNC70LrQuCDQsiDQtNGA0YPQs9C+0LUg0L/QvtC70L7QttC10L3QuNC1ICjQs9C+0YDQuNC30L7QvdGC0LDQu9GMXFzQstC10YDRgtC40LrQsNC70YwpXHJcbiAgIG1vdmVDYXJ0KCk7XHJcbiAgIGZ1bmN0aW9uIG1vdmVDYXJ0KCkge1xyXG4gICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCAxMDAwKSB7XHJcbiAgICAgICAgIHFzKFwiLmhlYWRlci10b3BfX2J1dHRvbnNcIikucHJlcGVuZChxcyhcIiNjYXJ0XCIpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgcXMoXCIuaGVhZGVyLW1lbnVfX2NvbnRhaW5lclwiKS5hcHBlbmQocXMoXCIjY2FydFwiKSk7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgLy8gISBTcG9pbGVyXHJcblxyXG4gICBpZiAocXMoXCIuc3BvaWxlclwiKSkge1xyXG4gICAgICAvLyA/INCV0YHQu9C4INC90YPQttC90L4g0L7RgtC60YDRi9GC0Ywg0YLQvtC70YzQutC+INC/0LXRgNCy0YvQuSDRgdC/0L7QudC70LXRgCDQvdCwINGB0YLRgNCw0L3QuNGG0LUuINCc0L7QttC90L4g0L/RgNC+0LPQvdCw0YLRjCDRhtC40LrQu9C+0Lwg0LTQu9GPINC+0YHRgtCw0LvRjNC90YvRhVxyXG4gICAgICAvLyBpZiAocXMoXCIuc3BvaWxlclwiKS5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikpIHtcclxuICAgICAgLy8gICAgbGV0IHNwb2lsZXJXcmFwcGVyID0gcWEoXCIuc3BvaWxlcl9fd3JhcHBlclwiKVswXTtcclxuICAgICAgLy8gICAgc3BvaWxlcldyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gc3BvaWxlcldyYXBwZXIuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICBib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVTcG9pbGVyKTtcclxuXHJcbiAgICAgIGZ1bmN0aW9uIHRvZ2dsZVNwb2lsZXIoZSkge1xyXG4gICAgICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5zcG9pbGVyX19wcmV2aWV3XCIpKSB7XHJcbiAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuc3BvaWxlclwiKS5jbGFzc0xpc3QudG9nZ2xlKFwib3BlbmVkXCIpO1xyXG4gICAgICAgICAgICBsZXQgc3BvaWxlcldyYXBwZXIgPSBlLnRhcmdldC5jbG9zZXN0KFwiLnNwb2lsZXJfX3ByZXZpZXdcIikubmV4dEVsZW1lbnRTaWJsaW5nO1xyXG4gICAgICAgICAgICBpZiAoIWUudGFyZ2V0LmNsb3Nlc3QoXCIuc3BvaWxlclwiKS5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikpIHtcclxuICAgICAgICAgICAgICAgc3BvaWxlcldyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gbnVsbDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgc3BvaWxlcldyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gc3BvaWxlcldyYXBwZXIuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICAvLyAhIENFT1xyXG4gICBpZiAocXMoXCIuY2VvXCIpKSB7XHJcbiAgICAgIC8vID8g0JXRgdC70Lgg0L3Rg9C20L3QviDQvtGC0LrRgNGL0YLRjCDRgtC+0LvRjNC60L4g0L/QtdGA0LLRi9C5INGB0L/QvtC50LvQtdGAINC90LAg0YHRgtGA0LDQvdC40YbQtS4g0JzQvtC20L3QviDQv9GA0L7Qs9C90LDRgtGMINGG0LjQutC70L7QvCDQtNC70Y8g0L7RgdGC0LDQu9GM0L3Ri9GFXHJcbiAgICAgIC8vIGlmIChxcyhcIi5zcG9pbGVyXCIpLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5lZFwiKSkge1xyXG4gICAgICAvLyAgICBsZXQgc3BvaWxlcldyYXBwZXIgPSBxYShcIi5zcG9pbGVyX193cmFwcGVyXCIpWzBdO1xyXG4gICAgICAvLyAgICBzcG9pbGVyV3JhcHBlci5zdHlsZS5oZWlnaHQgPSBzcG9pbGVyV3JhcHBlci5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XHJcbiAgICAgIC8vIH1cclxuICAgICAgY29uc3QgY2VvQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jZW9fX2J0blwiKTtcclxuICAgICAgY2VvQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVDZW8pO1xyXG5cclxuICAgICAgZnVuY3Rpb24gdG9nZ2xlQ2VvKGUpIHtcclxuICAgICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCIuY2VvX19wcmV2aWV3XCIpIHx8IGUudGFyZ2V0LmNsb3Nlc3QoXCIuY2VvX19idG5cIikpIHtcclxuICAgICAgICAgICAgZS50YXJnZXQuY2xvc2VzdChcIi5jZW9cIikuY2xhc3NMaXN0LnRvZ2dsZShcIm9wZW5lZFwiKTtcclxuICAgICAgICAgICAgbGV0IGNlb1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNlb19fcHJldmlld1wiKS5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICAgIGlmICghZS50YXJnZXQuY2xvc2VzdChcIi5jZW9cIikuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpKSB7XHJcbiAgICAgICAgICAgICAgIGNlb1dyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gbnVsbDtcclxuICAgICAgICAgICAgICAgY2VvQnRuLnRleHRDb250ZW50ID0gXCLQlNC40LLQuNGC0LjRgdGMINCx0ZbQu9GM0YjQtVwiO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICBjZW9CdG4udGV4dENvbnRlbnQgPSBcItCh0YXQvtCy0LDRgtC4XCI7XHJcbiAgICAgICAgICAgICAgIGNlb1dyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gY2VvV3JhcHBlci5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC8vICEgSG9tZSA9PiBIZXJvXHJcbiAgIC8vIGNvbnN0IHN3aXBlckJhbm5lcnMgPSBuZXcgU3dpcGVyKFwiLmhlcm9fX3N3aXBlci1iYW5uZXJzXCIsIHtcclxuICAgLy8gICAgLy8gbG9vcDogdHJ1ZSxcclxuICAgLy8gICAgc3BlZWQ6IDUwMCxcclxuICAgLy8gICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgLy8gICAgaW5pdGlhbFNsaWRlOiAxLFxyXG4gICAvLyAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAvLyAgICBlZmZlY3Q6IFwiZmFkZVwiLFxyXG4gICAvLyAgICBmYWRlRWZmZWN0OiB7XHJcbiAgIC8vICAgICAgIGNyb3NzRmFkZTogdHJ1ZSxcclxuICAgLy8gICAgfSxcclxuICAgLy8gfSk7XHJcbiAgIGNvbnN0IHN3aXBlckNhcmRzID0gbmV3IFN3aXBlcihcIi5jYXJkc19fc3dpcGVyXCIsIHtcclxuICAgICAgLy8gbG9vcDogdHJ1ZSxcclxuICAgICAgc3BlZWQ6IDUwMCxcclxuICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgaW5pdGlhbFNsaWRlOiAxLFxyXG4gICAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgICAvLyBlZmZlY3Q6IFwiZmFkZVwiLFxyXG4gICAgICAvLyBmYWRlRWZmZWN0OiB7XHJcbiAgICAgIC8vICAgIGNyb3NzRmFkZTogdHJ1ZSxcclxuICAgICAgLy8gfSxcclxuICAgfSk7XHJcbiAgIGNvbnN0IHN3aXBlckhlcm9DYXJkcyA9IG5ldyBTd2lwZXIoXCIuaGVyb19fc3dpcGVyLWNhcmRzXCIsIHtcclxuICAgICAgLy8gbG9vcDogdHJ1ZSxcclxuICAgICAgc3BlZWQ6IDUwMCxcclxuICAgICAgc2xpZGVzUGVyVmlldzogMS43NSxcclxuICAgICAgaW5pdGlhbFNsaWRlOiAxLFxyXG4gICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgc2ltdWxhdGVUb3VjaDogdHJ1ZSxcclxuICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgNTY4OiB7XHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDIuMjUsXHJcbiAgICAgICAgIH0sXHJcbiAgICAgICAgIDEwMDA6IHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcclxuICAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgfSk7XHJcbiAgIHN3aXBlckNhcmRzLmNvbnRyb2xsZXIuY29udHJvbCA9IHN3aXBlckhlcm9DYXJkcztcclxuICAgc3dpcGVySGVyb0NhcmRzLmNvbnRyb2xsZXIuY29udHJvbCA9IHN3aXBlckNhcmRzO1xyXG5cclxuICAgLy8gLy8gISBDYXJkc1xyXG4gICAvLyBsZXQgY2FyZHMgPSBxYShcIi5jYXJkcyAuY2FyZFwiKTtcclxuICAgLy8gbGV0IGNhcmRDb250ZW50ID0gcWEoXCIuY2FyZHMgLmNhcmRfX2NvbnRlbnRcIik7XHJcbiAgIC8vIGxldCBjYXJkUHJldmlldyA9IHFzKFwiLmNhcmRzIC5jYXJkOm50aC1jaGlsZCgyKSAuY2FyZF9fcHJldmlld1wiKTtcclxuICAgLy8gbGV0IGNhcmRCb2R5ID0gcXMoXCIuY2FyZHMgLmNhcmRfX2JvZHlcIik7XHJcbiAgIC8vIGNhcmRzLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgIC8vICAgIGVsLnN0eWxlLmhlaWdodCA9IGNhcmRQcmV2aWV3LnNjcm9sbEhlaWdodCArIGNhcmRCb2R5LnNjcm9sbEhlaWdodCArIFwicHhcIjtcclxuICAgLy8gfSk7XHJcbiAgIC8vIGNhcmRDb250ZW50LmZvckVhY2goKGVsKSA9PiB7XHJcbiAgIC8vICAgIGVsLnN0eWxlLnRvcCA9IGBjYWxjKDEwMCUgLSAke2NhcmRQcmV2aWV3LnNjcm9sbEhlaWdodH1weClgO1xyXG4gICAvLyB9KTtcclxuXHJcbiAgIC8vICEgQ2FyZHNcclxuICAgbGV0IGNhcmRzID0gcWEoXCIuY2FyZHMgLmNhcmRcIik7XHJcbiAgIGxldCBjYXJkQ29udGVudCA9IHFhKFwiLmNhcmRzIC5jYXJkX19jb250ZW50XCIpO1xyXG5cclxuICAgbGV0IGNhcmRzUHJldmlldyA9IHFhKFwiLmNhcmRzIC5jYXJkIC5jYXJkX19wcmV2aWV3XCIpO1xyXG4gICBsZXQgY2FyZHNQcmV2aWV3SGVpZ2h0ID0gW107XHJcbiAgIGNhcmRzUHJldmlldy5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICBjYXJkc1ByZXZpZXdIZWlnaHQucHVzaChlbC5zY3JvbGxIZWlnaHQpO1xyXG4gICB9KTtcclxuICAgLy8g0KPQt9C90LDQtdC8INC80LDQutC40YHQvNCw0LvRjNC90YPRjiDQstGL0YHQvtGC0YMg0L/RgNC10LLRjNGO0YjQutC4INC60LDRgNGC0L7Rh9C60Lgg0LrQstC10YHRgtCwXHJcbiAgIGxldCBtYXhQcmV2aWV3SGVpZ2h0ID0gTWF0aC5tYXgoLi4uY2FyZHNQcmV2aWV3SGVpZ2h0KTtcclxuXHJcbiAgIGxldCBjYXJkQm9keSA9IHFhKFwiLmNhcmRzIC5jYXJkX19ib2R5XCIpO1xyXG4gICBsZXQgY2FyZHNCb2R5SGVpZ2h0ID0gW107XHJcbiAgIGNhcmRCb2R5LmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGNhcmRzQm9keUhlaWdodC5wdXNoKGVsLnNjcm9sbEhlaWdodCk7XHJcbiAgIH0pO1xyXG4gICAvLyDQo9C30L3QsNC10Lwg0LzQsNC60LjRgdC80LDQu9GM0L3Rg9GOINCy0YvRgdC+0YLRgyDRgdC/0YDRj9GC0LDQvdC90L7QuSDRh9Cw0YHRgtC4INC60LDRgNGC0L7Rh9C60Lgg0LrQstC10YHRgtCwXHJcbiAgIGxldCBtYXhCb2R5SGVpZ2h0ID0gTWF0aC5tYXgoLi4uY2FyZHNCb2R5SGVpZ2h0KTtcclxuXHJcbiAgIC8vINCSINGN0YLRgyDQv9C10YDQtdC80LXQvdC90YPRjiDQv9C10YDQtdC00LDQtNC40Lwg0LLRi9GB0L7RgtGDINC/0YDQtdCy0YzRjtGI0LrQuCDQv9C+0YHQu9C1INGD0LLQtdC70LXRh9C10L3QuNGPINGI0YDQuNGE0YLQsFxyXG4gICBsZXQgZmluYWxIZWlnaHQgPSBtYXhQcmV2aWV3SGVpZ2h0O1xyXG4gICBmdW5jdGlvbiByZXNpemVMYXlvdXQoZSkge1xyXG4gICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5jYXJkXCIpKSB7XHJcbiAgICAgICAgIGxldCBuZXdQcmV2aWV3SGVpZ2h0ID0gZS50YXJnZXQuY2xvc2VzdChcIi5jYXJkXCIpLmNoaWxkcmVuWzFdLmZpcnN0RWxlbWVudENoaWxkLnNjcm9sbEhlaWdodDtcclxuICAgICAgICAgLy8g0J/RgNC+0LLQtdGA0Y/QtdC8INGB0YLQsNC70LAg0LvQuCDQstGL0YHQvtGC0LAg0L/RgNC10LLRjNGO0YjQutC4INCx0L7Qu9GM0YjQtSDRh9C10Lwg0LvRjtCx0LDRjyDQtNGA0YPQs9Cw0Y8g0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbiAgICAgICAgIGlmIChuZXdQcmV2aWV3SGVpZ2h0ID4gZmluYWxIZWlnaHQpIHtcclxuICAgICAgICAgICAgY2FyZHMuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgICAgICAgICAgbGV0IG1heEhlaWdodCA9IG5ld1ByZXZpZXdIZWlnaHQgKyBtYXhCb2R5SGVpZ2h0O1xyXG4gICAgICAgICAgICAgICBmaW5hbEhlaWdodCA9IG5ld1ByZXZpZXdIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgIC8vINCV0YHQu9C4INGB0YLQsNC70LAgLSDRg9Cy0LXQu9C40YfQuNCy0LDQtdC8INCy0YHQtSDQv9GA0LXQstGM0Y7RiNC60Lgg0LTQviDQvtC00L3QvtCz0L4g0YDQsNC30LzQtdGA0LBcclxuICAgICAgICAgICAgICAgZWwuc3R5bGUuaGVpZ2h0ID0gbWF4SGVpZ2h0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuICAgLy9cclxuICAgLy8g0JfQsNC00LDQtdC8INCx0LDQt9C+0LLRg9GOINCy0YvRgdC+0YLRgyDQutCw0YDRgtC+0YfQutC1XHJcbiAgIGNhcmRzLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGVsLnN0eWxlLmhlaWdodCA9IG1heFByZXZpZXdIZWlnaHQgKyBtYXhCb2R5SGVpZ2h0ICsgXCJweFwiO1xyXG4gICB9KTtcclxuICAgYm9keS5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm92ZXJcIiwgcmVzaXplTGF5b3V0KTtcclxuICAgLy8g0JLQvtC30LLRgNCw0YnQsNC10Lwg0L/RgNC10LLRjNGO0YjQutGDKNCwINGC0L7Rh9C90LXQtSDQstGB0LUg0YLQtdC70L4sINC90L4g0L3QtdC90YPQttC90YPRjiDQtdCz0L4g0YfQsNGB0YLRjCDQvdC1INCy0LjQtNC90L4pINCyINC+0LHQu9Cw0YHRgtGMINCy0LjQtNC40LzQvtGB0YLQuCDQutCw0YDRgtC+0YfQutC4ICjQsiDRgdCw0LzRi9C5INC10ZEg0L3QuNC3KVxyXG4gICBjYXJkQ29udGVudC5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICBlbC5zdHlsZS50b3AgPSBgY2FsYygxMDAlIC0gJHttYXhQcmV2aWV3SGVpZ2h0fXB4KWA7XHJcbiAgIH0pO1xyXG5cclxuICAgLy8gcmV2aWV3cyBzbGlkZXJcclxuICAgY29uc3Qgc3dpcGVyUmV2aWV3cyA9IG5ldyBTd2lwZXIoXCIucmV2aWV3c19fc2xpZGVyXCIsIHtcclxuICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgc3BlZWQ6IDUwMCxcclxuICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgaW5pdGlhbFNsaWRlOiAxLFxyXG4gICAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgc3BhY2VCZXR3ZWVuOiAyNCxcclxuICAgICAgcGFnaW5hdGlvbjoge1xyXG4gICAgICAgICBlbDogXCIucmV2aWV3c19fcGFnaW5hdGlvblwiLFxyXG4gICAgICAgICBjbGlja2FibGU6IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgbmV4dEVsOiBcIi5yZXZpZXdzX19uZXh0XCIsXHJcbiAgICAgICAgIHByZXZFbDogXCIucmV2aWV3c19fcHJldlwiLFxyXG4gICAgICB9LFxyXG4gICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICA1Njg6IHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMS41LFxyXG4gICAgICAgICB9LFxyXG4gICAgICAgICA3MDA6IHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMS45Mjk5LFxyXG4gICAgICAgICB9LFxyXG4gICAgICAgICA5MDA6IHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgICAgfSxcclxuICAgICAgICAgMTIwMDoge1xyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICB9KTtcclxuICAgY29uc3QgcG9wdXBSZXZpZXdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXZpZXdzLXBvcHVwXCIpO1xyXG5cclxuICAgY29uc3QgZmVlZGJhY2tCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmV2aWV3c19fZmVlZGJhY2snKTtcclxuICAgY29uc3QgcG9wdXBGZWVkYmFjayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mZWVkYmFjay1wb3B1cCcpO1xyXG4gICBjb25zdCBmZWVkYmFja0Nsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZlZWRiYWNrLXBvcHVwX19jbG9zZScpO1xyXG4gICBmZWVkYmFja0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldEZlZWRiYWNrKTtcclxuICAgZmVlZGJhY2tDbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlRmVlZGJhY2spO1xyXG4gICBmdW5jdGlvbiBnZXRGZWVkYmFjaygpIHtcclxuICAgICAgcG9wdXBGZWVkYmFjay5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgnbG9jaycpO1xyXG4gICAgICB9LDMwMCk7XHJcbiAgIH1cclxuICAgZnVuY3Rpb24gY2xvc2VGZWVkYmFjaygpIHtcclxuICAgICAgcG9wdXBGZWVkYmFjay5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdsb2NrJyk7XHJcbiAgIH1cclxuICAgLy8gY29uc3QgcmV2aWV3c0ltZ0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5yZXZpZXdzX19pbWcnKTtcclxuICAgLy8gY29uc3QgcmV2aWV3c1ZpZGVvQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJldmlld3NfX2JvZHktLXZpZGVvJyk7XHJcbiAgIC8vIGNvbnN0IHJldmlld3NEZXRhaWxzQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJldmlld3NfX2Zvb3Rlci1idG4nKTtcclxuICAgLy8gY29uc3QgY2xvc2VSZXZpZXdzUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmV2aWV3cy1wb3B1cF9fY2xvc2UnKTtcclxuICAgLy8gY29uc3QgbmV4dFNsaWRlUG9wVXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJldmlld3MtcG9wdXBfX25leHRcIik7XHJcbiAgIC8vIGNvbnN0IHByZXZTbGlkZVBvcFVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJldmlld3MtcG9wdXBfX3ByZXYnKTtcclxuICAgLy8gbGV0IHNsaWRlSWQ7XHJcbiAgIC8vIGxldCBzbGlkZVBvcHVwSWQ7XHJcbiAgIC8vIGxldCBudW1TbGlkZUlkO1xyXG4gICBib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzaG93UG9wdXBSZXZpZXdzKTtcclxuXHJcbiAgIGNvbnN0IHJldmlld3NQb3B1cEltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmV2aWV3cy1wb3B1cF9faXRlbS0taW1nXCIpO1xyXG4gICBjb25zdCByZXZpZXdzUG9wdXBUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXZpZXdzLXBvcHVwX19pdGVtLS10ZXh0XCIpO1xyXG4gICBjb25zdCByZXZpZXdzUG9wdXBWaWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmV2aWV3cy1wb3B1cF9faXRlbS0tdmlkZW9cIik7XHJcblxyXG4gICBmdW5jdGlvbiBzaG93UG9wdXBSZXZpZXdzKGUpIHtcclxuICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCIucmV2aWV3c19fc2xpZGUgLnJldmlld3NfX2ltZ1wiKSkge1xyXG4gICAgICAgICBwb3B1cFJldmlld3MuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgYm9keS5jbGFzc0xpc3QuYWRkKFwibG9ja1wiKTtcclxuICAgICAgICAgcmV2aWV3c1BvcHVwSW1nLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCIucmV2aWV3c19fc2xpZGUgLnJldmlld3NfX2JvZHktLXZpZGVvXCIpKSB7XHJcbiAgICAgICAgIHBvcHVwUmV2aWV3cy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICBib2R5LmNsYXNzTGlzdC5hZGQoXCJsb2NrXCIpO1xyXG4gICAgICAgICByZXZpZXdzUG9wdXBWaWRlby5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLnJldmlld3NfX3NsaWRlIC5yZXZpZXdzX19mb290ZXItYnRuXCIpKSB7XHJcbiAgICAgICAgIHBvcHVwUmV2aWV3cy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICBib2R5LmNsYXNzTGlzdC5hZGQoXCJsb2NrXCIpO1xyXG4gICAgICAgICByZXZpZXdzUG9wdXBUZXh0LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCIucmV2aWV3cy1wb3B1cF9fY2xvc2VcIikpIHtcclxuICAgICAgICAgcG9wdXBSZXZpZXdzLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImxvY2tcIik7XHJcbiAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgcmV2aWV3c1BvcHVwSW1nLmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSB8fFxyXG4gICAgICAgICAgICByZXZpZXdzUG9wdXBUZXh0LmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSB8fFxyXG4gICAgICAgICAgICByZXZpZXdzUG9wdXBWaWRlby5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIilcclxuICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHJldmlld3NQb3B1cEltZy5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICByZXZpZXdzUG9wdXBUZXh0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgIHJldmlld3NQb3B1cFZpZGVvLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gaWYgKFxyXG4gICAgICAvLyAgICBlLnRhcmdldC5jbG9zZXN0KFwiLnJldmlld3NfX3NsaWRlIC5yZXZpZXdzX19pbWdcIikgfHxcclxuICAgICAgLy8gICAgZS50YXJnZXQuY2xvc2VzdChcIi5yZXZpZXdzX19zbGlkZSAucmV2aWV3c19fYm9keS0tdmlkZW9cIikgfHxcclxuICAgICAgLy8gICAgZS50YXJnZXQuY2xvc2VzdChcIi5yZXZpZXdzX19zbGlkZSAucmV2aWV3c19fZm9vdGVyLWJ0blwiKVxyXG4gICAgICAvLyApIHtcclxuICAgICAgLy8gICAgc2xpZGVJZCA9IGUudGFyZ2V0LmNsb3Nlc3QoXCIucmV2aWV3c19fc2xpZGVcIikuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbGlkZVwiKTtcclxuICAgICAgLy8gICAgc2xpZGVQb3B1cElkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXZpZXdzLXBvcHVwX19zbGlkZVwiKS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBvcHVwLXNsaWRlXCIpO1xyXG4gICAgICAvLyAgICBwb3B1cFJldmlld3MuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgLy8gICAgYm9keS5jbGFzc0xpc3QuYWRkKFwibG9ja1wiKTtcclxuICAgICAgLy8gICAgbnVtU2xpZGVJZCA9IHBhcnNlSW50KHNsaWRlSWQpO1xyXG4gICAgICAvLyAgICBjb25zb2xlLmxvZyhzbGlkZUlkLCBzbGlkZVBvcHVwSWQpO1xyXG4gICAgICAvLyAgICBmb3IgKGxldCBpID0gMTsgaSA8IG51bVNsaWRlSWQ7ICkge1xyXG4gICAgICAvLyAgICAgICBuZXh0U2xpZGVQb3BVcC5jbGljaygpO1xyXG4gICAgICAvLyAgICAgICArK2k7XHJcbiAgICAgIC8vICAgIH1cclxuICAgICAgLy8gfVxyXG4gICB9XHJcblxyXG4gICBib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja1ZpZGVvKTtcclxuXHJcbiAgIGZ1bmN0aW9uIGNsaWNrVmlkZW8oZSkge1xyXG4gICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5yZXZpZXdzLXBvcHVwX192aWRlbyBzdmdcIikgfHwgZS50YXJnZXQuY2xvc2VzdChcIi5yZXZpZXdzLXBvcHVwX19wb3N0ZXJcIikpIHtcclxuICAgICAgICAgcXMoXCJ2aWRlb1wiKS5zdHlsZS56SW5kZXggPSBcIjVcIjtcclxuICAgICAgICAgcXMoXCJ2aWRlb1wiKS5zZXRBdHRyaWJ1dGUoXCJjb250cm9sc1wiLCBcInRydWVcIik7XHJcbiAgICAgICAgIHFzKFwidmlkZW9cIikucGxheSgpO1xyXG4gICAgICAgICBxcyhcIi5yZXZpZXdzLXBvcHVwX19wb3N0ZXJcIikuc3R5bGUub3BhY2l0eSA9IFwiMFwiO1xyXG4gICAgICB9XHJcbiAgIH1cclxuICAgLy8gcmV2aWV3c0ltZ0J0bi5mb3JFYWNoKGl0ZW0gPT4gKGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzaG93UmV2aWV3c1BvcHVwKSkpO1xyXG4gICAvLyByZXZpZXdzVmlkZW9CdG4uZm9yRWFjaChpdGVtID0+IChpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd1Jldmlld3NQb3B1cCkpKTtcclxuICAgLy8gcmV2aWV3c0RldGFpbHNCdG4uZm9yRWFjaChpdGVtID0+IChpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd1Jldmlld3NQb3B1cCkpKTtcclxuICAgLy8gY2xvc2VSZXZpZXdzUG9wdXAuZm9yRWFjaChpdGVtID0+IChpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAvLyAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5LmhvbWUnKS5jbGFzc0xpc3QucmVtb3ZlKCdsb2NrJyk7XHJcbiAgIC8vICAgIHBvcHVwUmV2aWV3cy5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgLy8gfSkpKVxyXG5cclxuICAgLy8gZnVuY3Rpb24gc2hvd1Jldmlld3NQb3B1cCgpIHtcclxuXHJcbiAgIC8vICAgIHNldFRpbWVvdXQoICgpID0+IHtcclxuICAgLy8gICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keS5ob21lJykuY2xhc3NMaXN0LmFkZCgnbG9jaycpO1xyXG4gICAvLyAgICAgICBwb3B1cFJldmlld3MuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgIC8vICAgIH0sIDMwMClcclxuICAgLy8gfVxyXG5cclxuICAgLy9yZXZpZXdzLXBvcHVwIHNsaWRlclxyXG4gICAvLyBjb25zdCByZXZpZXdzUG9wdXBTbGlkZXIgPSBuZXcgU3dpcGVyKFwiLnJldmlld3MtcG9wdXBfX3NsaWRlclwiLCB7XHJcbiAgIC8vICAgIGxvb3A6IHRydWUsXHJcbiAgIC8vICAgIHNwZWVkOiA1MDAsXHJcbiAgIC8vICAgIHNsaWRlc1BlclZpZXc6IDEsXHJcbiAgIC8vICAgIGluaXRpYWxTbGlkZTogMCxcclxuICAgLy8gICAgc2ltdWxhdGVUb3VjaDogdHJ1ZSxcclxuICAgLy8gICAgY2VudGVyZWRTbGlkZXM6IHRydWUsXHJcbiAgIC8vICAgIHNsaWRlVG9DbGlja2VkU2xpZGU6IHRydWUsXHJcbiAgIC8vICAgIHNwYWNlQmV0d2VlbjogMjQsXHJcbiAgIC8vICAgIHBhZ2luYXRpb246IHtcclxuICAgLy8gICAgICAgZWw6IFwiLnJldmlld3MtcG9wdXBfX3BhZ2luYXRpb25cIixcclxuICAgLy8gICAgICAgY2xpY2thYmxlOiB0cnVlLFxyXG4gICAvLyAgICB9LFxyXG4gICAvLyAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgIC8vICAgICAgIG5leHRFbDogXCIucmV2aWV3cy1wb3B1cF9fbmV4dFwiLFxyXG4gICAvLyAgICAgICBwcmV2RWw6IFwiLnJldmlld3MtcG9wdXBfX3ByZXZcIixcclxuICAgLy8gICAgfSxcclxuICAgLy8gfSk7XHJcblxyXG4gICAvLyAhIEZvb3RlclxyXG4gICAvLyBUZWxlZ3JhbSBob3ZlclxyXG4gICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyb3ZlclwiLCBjaGFuZ2VUZWxlZ3JhbUNvbG9yKTtcclxuXHJcbiAgIGZ1bmN0aW9uIGNoYW5nZVRlbGVncmFtQ29sb3IoZSkge1xyXG4gICAgICBpZiAoZS50eXBlID09IFwicG9pbnRlcmRvd25cIikge1xyXG4gICAgICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5mb290ZXItdG9wX19zdWJzY3JpYmUgYVwiKSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHFhKFwiLmZvb3Rlci10b3BfX3N1YnNjcmliZSAubm90XCIpWzBdLmNsYXNzTGlzdC5yZW1vdmUoXCJob3ZlclwiKTtcclxuICAgICAgICAgICAgcWEoXCIuZm9vdGVyLXRvcF9fc3Vic2NyaWJlIC5ub3RcIilbMV0uY2xhc3NMaXN0LnJlbW92ZShcImhvdmVyXCIpO1xyXG4gICAgICAgICAgICBxYShcIi5mb290ZXItdG9wX19zdWJzY3JpYmUgLm5vdFwiKVswXS5jbGFzc0xpc3QuYWRkKFwiY2xpY2tlZFwiKTtcclxuICAgICAgICAgICAgcWEoXCIuZm9vdGVyLXRvcF9fc3Vic2NyaWJlIC5ub3RcIilbMV0uY2xhc3NMaXN0LmFkZChcImNsaWNrZWRcIik7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCByZW1vdmVTdHlsZXNVcCk7XHJcbiAgICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChlLnR5cGUgPT0gXCJwb2ludGVyb3ZlclwiKSB7XHJcbiAgICAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLmZvb3Rlci10b3BfX3N1YnNjcmliZSBhXCIpKSB7XHJcbiAgICAgICAgICAgIHFhKFwiLmZvb3Rlci10b3BfX3N1YnNjcmliZSAubm90XCIpWzBdLmNsYXNzTGlzdC5hZGQoXCJob3ZlclwiKTtcclxuICAgICAgICAgICAgcWEoXCIuZm9vdGVyLXRvcF9fc3Vic2NyaWJlIC5ub3RcIilbMV0uY2xhc3NMaXN0LmFkZChcImhvdmVyXCIpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLCBjaGFuZ2VUZWxlZ3JhbUNvbG9yKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm91dFwiLCByZW1vdmVTdHlsZXNPdXQpO1xyXG4gICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICBmdW5jdGlvbiByZW1vdmVTdHlsZXNVcChlKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwidXBcIik7XHJcbiAgICAgIHFhKFwiLmZvb3Rlci10b3BfX3N1YnNjcmliZSAubm90XCIpWzBdLmNsYXNzTGlzdC5yZW1vdmUoXCJjbGlja2VkXCIpO1xyXG4gICAgICBxYShcIi5mb290ZXItdG9wX19zdWJzY3JpYmUgLm5vdFwiKVsxXS5jbGFzc0xpc3QucmVtb3ZlKFwiY2xpY2tlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgY2hhbmdlVGVsZWdyYW1Db2xvcik7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCByZW1vdmVTdHlsZXNVcCk7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJvdXRcIiwgcmVtb3ZlU3R5bGVzT3V0KTtcclxuICAgfVxyXG4gICBmdW5jdGlvbiByZW1vdmVTdHlsZXNPdXQoZSkge1xyXG4gICAgICBxYShcIi5mb290ZXItdG9wX19zdWJzY3JpYmUgLm5vdFwiKVswXS5jbGFzc0xpc3QucmVtb3ZlKFwiaG92ZXJcIik7XHJcbiAgICAgIHFhKFwiLmZvb3Rlci10b3BfX3N1YnNjcmliZSAubm90XCIpWzFdLmNsYXNzTGlzdC5yZW1vdmUoXCJob3ZlclwiKTtcclxuICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgY2hhbmdlVGVsZWdyYW1Db2xvcik7XHJcbiAgICAgIC8vIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCByZW1vdmVTdHlsZXNVcCk7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJvdXRcIiwgcmVtb3ZlU3R5bGVzT3V0KTtcclxuICAgfVxyXG4gICAvLyEgVGFibGUgc3dpcGVyXHJcbiAgIGNvbnN0IHN3aXBlclRhbGUgPSBuZXcgU3dpcGVyKFwiLnN0ZXAzX19zd2lwZXJcIiwge1xyXG4gICAgICAvLyBsb29wOiB0cnVlLFxyXG4gICAgICBzcGVlZDogNTAwLFxyXG4gICAgICBzbGlkZXNQZXJWaWV3OiAzLFxyXG4gICAgICBzbGlkZXNQZXJHcm91cDogMyxcclxuICAgICAgaW5pdGlhbFNsaWRlOiAwLFxyXG4gICAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgICAvLyBmcmVlTW9kZTogdHJ1ZSxcclxuICAgICAgcGFnaW5hdGlvbjoge1xyXG4gICAgICAgICBlbDogXCIuc3RlcDNfX3BhZ2luYXRpb25cIixcclxuICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgIG5leHRFbDogXCIuc2xpZGVyX19uZXh0XCIsXHJcbiAgICAgICAgIHByZXZFbDogXCIuc2xpZGVyX19wcmV2XCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAgICAgIDUwMDoge1xyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA0LFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJHcm91cDogNCxcclxuICAgICAgICAgfSxcclxuICAgICAgICAgNjIwOiB7XHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDUsXHJcbiAgICAgICAgICAgIHNsaWRlc1Blckdyb3VwOiA1LFxyXG4gICAgICAgICB9LFxyXG4gICAgICAgICA3NDA6IHtcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNyxcclxuICAgICAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDcsXHJcbiAgICAgICAgIH0sXHJcbiAgICAgIH0sXHJcblxyXG4gICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgIG5leHRFbDogXCIuc3RlcDNfX2J0bi1yaWdodFwiLFxyXG4gICAgICAgICBwcmV2RWw6IFwiLnN0ZXAzX19idG4tbGVmdFwiLFxyXG4gICAgICB9LFxyXG4gICB9KTtcclxuXHJcbiAgIC8vICEgU2xpZGVyLXZlcnRpY2FsXHJcbiAgIGNvbnN0IHN3aXBlclZlcnRpY2FsQmlnID0gbmV3IFN3aXBlcihcIi52ZXJ0aWNhbC1nYWxsZXJ5X19zd2lwZXItYmlnXCIsIHtcclxuICAgICAgLy8gbG9vcDogdHJ1ZSxcclxuICAgICAgc3BlZWQ6IDUwMCxcclxuICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgaW5pdGlhbFNsaWRlOiAwLFxyXG4gICAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAgICBzcGFjZUJldHdlZW46IDEyLFxyXG4gICAgICB0aHVtYnM6IHtcclxuICAgICAgICAgc3dpcGVyOiB7XHJcbiAgICAgICAgICAgIGVsOiBcIi52ZXJ0aWNhbC1nYWxsZXJ5X19zd2lwZXItc21hbGxcIixcclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcclxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxMixcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgNTAwOiB7XHJcbiAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDQsXHJcbiAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTQsXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgIDYwMDoge1xyXG4gICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA1LFxyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAxMDAwOiB7XHJcbiAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMjAsXHJcbiAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDUsXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgIDEyMDA6IHtcclxuICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNixcclxuICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgfSk7XHJcbiAgIC8vIGNvbnN0IHN3aXBlclZlcnRpY2FsU21hbGwgPSBuZXcgU3dpcGVyKFwiLnZlcnRpY2FsLWdhbGxlcnlfX3N3aXBlci1zbWFsbFwiLCB7XHJcbiAgIC8vICAgIC8vIGxvb3A6IHRydWUsXHJcbiAgIC8vICAgIHNwZWVkOiA1MDAsXHJcbiAgIC8vICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgIC8vICAgIGluaXRpYWxTbGlkZTogMCxcclxuICAgLy8gICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgLy8gICAgc3BhY2VCZXR3ZWVuOiAxMixcclxuICAgLy8gICAgYnJlYWtwb2ludHM6IHtcclxuICAgLy8gICAgICAgNTAwOiB7XHJcbiAgIC8vICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDQsXHJcbiAgIC8vICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTQsXHJcbiAgIC8vICAgICAgIH0sXHJcbiAgIC8vICAgICAgIDEwMDA6IHtcclxuICAgLy8gICAgICAgICAgc2xpZGVzUGVyVmlldzogNSxcclxuICAgLy8gICAgICAgICAgc3BhY2VCZXR3ZWVuOiAyMCxcclxuICAgLy8gICAgICAgfSxcclxuICAgLy8gICAgICAgMTIwMDoge1xyXG4gICAvLyAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA2LFxyXG4gICAvLyAgICAgICB9LFxyXG4gICAvLyAgICB9LFxyXG4gICAvLyB9KTtcclxuICAgLy8gc3dpcGVyVmVydGljYWxTbWFsbC5jb250cm9sbGVyLmNvbnRyb2wgPSBzd2lwZXJWZXJ0aWNhbEJpZztcclxuICAgLy8gc3dpcGVyVmVydGljYWxCaWcuY29udHJvbGxlci5jb250cm9sID0gc3dpcGVyVmVydGljYWxTbWFsbDtcclxuXHJcbiAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGZpeFNsaWRlcik7XHJcbiAgIGZpeFNsaWRlcigpO1xyXG4gICBmdW5jdGlvbiBmaXhTbGlkZXIoKSB7XHJcbiAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+PSAxMDAwKSB7XHJcbiAgICAgICAgIGxldCBidWdTbGlkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhvcml6b250YWwtZ2FsbGVyeV9fc21hbGwtd3JhcFwiKTtcclxuICAgICAgICAgbGV0IG5vcm1hbFNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaG9yaXpvbnRhbC1nYWxsZXJ5X19iaWctd3JhcFwiKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XHJcbiAgICAgICAgIGJ1Z1NsaWRlci5zdHlsZS5tYXhIZWlnaHQgPSBub3JtYWxTbGlkZXIgKyBcInB4XCI7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAvLyAhIFNsaWRlci1ob3Jpem9udGFsXHJcbiAgIGNvbnN0IHN3aXBlckhvcml6b250YWxCaWcgPSBuZXcgU3dpcGVyKFwiLmhvcml6b250YWwtZ2FsbGVyeV9fc3dpcGVyLWJpZ1wiLCB7XHJcbiAgICAgIC8vIGxvb3A6IHRydWUsXHJcbiAgICAgIHNwZWVkOiA1MDAsXHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDEsXHJcbiAgICAgIHNpbXVsYXRlVG91Y2g6IHRydWUsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMTIsXHJcbiAgICAgIHNsaWRlclBlckNvbHVtbjogMSxcclxuICAgICAgLy8gbmF2aWdhdGlvbjoge1xyXG4gICAgICAvLyAgICBwcmV2RWw6ICcuaG9yaXpvbnRhbC1nYWxsZXJ5X19wcmV2JyxcclxuICAgICAgLy8gICAgbmV4dEVsOiAnLmhvcml6b250YWwtZ2FsbGVyeV9fbmV4dCcsXHJcbiAgICAgIC8vIH0sXHJcbiAgICAgIC8vIHBhZ2luYXRpb246IHtcclxuICAgICAgLy8gICAgZWw6ICcuaG9yaXpvbnRhbC1nYWxsZXJ5X19wYWdpbmF0aW9uJyxcclxuICAgICAgLy8gICAgY2xpY2thYmxlOiB0cnVlLFxyXG4gICAgICAvLyB9LCDRgNCw0LHQvtGC0LDQtdGCLCDQvdC+INC90YPQttC90L5cclxuICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgMTAwMDoge1xyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICB0aHVtYnM6IHtcclxuICAgICAgICAgc3dpcGVyOiB7XHJcbiAgICAgICAgICAgIGVsOiBcIi5ob3Jpem9udGFsLWdhbGxlcnlfX3N3aXBlci1zbWFsbFwiLFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDEyLFxyXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICAgICAgICA1MDA6IHtcclxuICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNCxcclxuICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxMCxcclxuICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgNjAwOiB7XHJcbiAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDUsXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgIDcwMDoge1xyXG4gICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA2LFxyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAxMDAwOiB7XHJcbiAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMjAsXHJcbiAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDYsXHJcbiAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJ2ZXJ0aWNhbFwiLFxyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICB9KTtcclxuICAgLy8gISBCUkVBS1xyXG4gICAvLyBjb25zdCBzd2lwZXJIb3Jpem9udGFsU21hbGwgPSBuZXcgU3dpcGVyKFwiLmhvcml6b250YWwtZ2FsbGVyeV9fc3dpcGVyLXNtYWxsXCIsIHtcclxuICAgLy8gICAgbG9vcDogdHJ1ZSxcclxuICAgLy8gICAgc3BlZWQ6IDUwMCxcclxuICAgLy8gICAgc2xpZGVzUGVyVmlldzogMyxcclxuICAgLy8gICAgaW5pdGlhbFNsaWRlOiAwLFxyXG4gICAvLyAgICBzbGlkZVRvQ2xpY2tlZFNsaWRlOiB0cnVlLFxyXG4gICAvLyAgICBzcGFjZUJldHdlZW46IDEyLFxyXG4gICAvLyBicmVha3BvaW50czoge1xyXG4gICAvLyAgICA1MDA6IHtcclxuICAgLy8gICAgICAgc2xpZGVzUGVyVmlldzogNCxcclxuICAgLy8gICAgICAgc3BhY2VCZXR3ZWVuOiAxMCxcclxuICAgLy8gICAgfSxcclxuICAgLy8gICAgNjAwOiB7XHJcbiAgIC8vICAgICAgIHNsaWRlc1BlclZpZXc6IDUsXHJcbiAgIC8vICAgIH0sXHJcbiAgIC8vICAgIDcwMDoge1xyXG4gICAvLyAgICAgICBzbGlkZXNQZXJWaWV3OiA2LFxyXG4gICAvLyAgICB9LFxyXG4gICAvLyAgICAxMDAwOiB7XHJcbiAgIC8vICAgICAgIHNwYWNlQmV0d2VlbjogMjAsXHJcbiAgIC8vICAgICAgIHNsaWRlc1BlclZpZXc6IDYsXHJcbiAgIC8vICAgIH0sXHJcbiAgIC8vIH0sXHJcbiAgIC8vIH0pO1xyXG4gICAvLyBzd2lwZXJIb3Jpem9udGFsU21hbGwuY29udHJvbGxlci5jb250cm9sID0gc3dpcGVySG9yaXpvbnRhbEJpZztcclxuICAgLy8gc3dpcGVySG9yaXpvbnRhbEJpZy5jb250cm9sbGVyLmNvbnRyb2wgPSBzd2lwZXJIb3Jpem9udGFsU21hbGw7XHJcbiAgIGlmIChxcyhcImJvZHkucXVlc3RcIikpIHtcclxuICAgICAgYm9keS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlU3RlcDIpO1xyXG4gICAgICBmdW5jdGlvbiB0b2dnbGVTdGVwMihlKSB7XHJcbiAgICAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLnN0ZXAyX19wcmV2aWV3XCIpKSB7XHJcbiAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuc3RlcDJfX3Nwb2lsZXJcIikuY2xhc3NMaXN0LnRvZ2dsZShcIm9wZW5lZFwiKTtcclxuICAgICAgICAgICAgbGV0IHNwb2lsZXJXcmFwcGVyID0gZS50YXJnZXQuY2xvc2VzdChcIi5zdGVwMl9fcHJldmlld1wiKS5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICAgIGlmICghZS50YXJnZXQuY2xvc2VzdChcIi5zdGVwMl9fc3BvaWxlclwiKS5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikpIHtcclxuICAgICAgICAgICAgICAgc3BvaWxlcldyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gbnVsbDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgc3BvaWxlcldyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gc3BvaWxlcldyYXBwZXIuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IHNlbGVjdEl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VsZWN0X19sYWJlbCcpO1xyXG4gICAgICBzZWxlY3RJdGVtLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZWxlY3RDaG9vc2UpO1xyXG4gICAgICB9KVxyXG4gICAgICBmdW5jdGlvbiBzZWxlY3RDaG9vc2UoKSB7XHJcbiAgICAgICAgIGxldCB0ZXh0ID0gdGhpcy5pbm5lclRleHQsXHJcbiAgICAgICAgIHNlbGVjdCA9IHRoaXMuY2xvc2VzdCgnLnNlbGVjdCcpLFxyXG4gICAgICAgICBjdXJyZW50VGV4dCA9IHNlbGVjdC5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0X19jdXJyZW50Jyk7XHJcbiAgICAgICAgIGN1cnJlbnRUZXh0LmlubmVyVGV4dCA9IHRleHQ7IFxyXG4gICAgICB9XHJcbiAgICAgIC8vICAgIGNvbnN0IHNwb2lsZXJJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5mYXFfX3Nwb2lsZXJcIik7XHJcbiAgICAgIC8vICAgIGNvbnN0IHNwb2lsZXJXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5mYXFfX3dyYXBwZXJcIik7XHJcbiAgICAgIC8vICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLmZhcV9fc3BvaWxlclwiKSkge1xyXG4gICAgICAvLyAgICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChcIi5mYXFfX3Nwb2lsZXJcIikuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpKSB7XHJcbiAgICAgIC8vICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuZmFxX19zcG9pbGVyXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuZWRcIik7XHJcbiAgICAgIC8vICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuZmFxX19wcmV2aWV3XCIpLm5leHRFbGVtZW50U2libGluZy5zdHlsZS5oZWlnaHQgPSBudWxsO1xyXG4gICAgICAvLyAgICAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCIuZmFxX19zcG9pbGVyXCIpKSB7XHJcbiAgICAgIC8vICAgICAgICAgIHNwb2lsZXJJdGVtLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XHJcbiAgICAgIC8vICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuZWRcIik7XHJcbiAgICAgIC8vICAgICAgICAgIH0pO1xyXG4gICAgICAvLyAgICAgICAgICBzcG9pbGVyV3JhcHBlci5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xyXG4gICAgICAvLyAgICAgICAgICAgICBlbC5zdHlsZS5oZWlnaHQgPSBudWxsO1xyXG4gICAgICAvLyAgICAgICAgICB9KTtcclxuICAgICAgLy8gICAgICAgICAgZS50YXJnZXQuY2xvc2VzdChcIi5mYXFfX3Nwb2lsZXJcIikuY2xhc3NMaXN0LnRvZ2dsZShcIm9wZW5lZFwiKTtcclxuICAgICAgLy8gICAgICAgICAgZS50YXJnZXQuY2xvc2VzdChcIi5mYXFfX3ByZXZpZXdcIikubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLmhlaWdodCA9XHJcbiAgICAgIC8vICAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIuZmFxX19wcmV2aWV3XCIpLm5leHRFbGVtZW50U2libGluZy5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XHJcbiAgICAgIC8vICAgICAgIH1cclxuICAgICAgLy8gICAgfVxyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICBjb25zdCBwYWNrU2xpZGVyID0gbmV3IFN3aXBlcihcIi5zdGVwMV9fc3dpcGVyXCIsIHtcclxuICAgICAgICAgc3BlZWQ6IDUwMCxcclxuICAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgICAgaW5pdGlhbFNsaWRlOiAxLFxyXG4gICAgICAgICBzaW11bGF0ZVRvdWNoOiB0cnVlLFxyXG4gICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgc3BhY2VCZXR3ZWVuOiAyNCxcclxuICAgICAgICAgcGFnaW5hdGlvbjoge1xyXG4gICAgICAgICAgICBlbDogXCIuc3RlcDFfX3BhZ2luYXRpb25cIixcclxuICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxyXG4gICAgICAgICB9LFxyXG4gICAgICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgICAgIG5leHRFbDogXCIuc3RlcDFfX25leHRcIixcclxuICAgICAgICAgICAgcHJldkVsOiBcIi5zdGVwMV9fcHJldlwiLFxyXG4gICAgICAgICB9LFxyXG4gICAgICAgICBicmVha3BvaW50czoge1xyXG4gICAgICAgICAgICA1Njg6IHtcclxuICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMS41LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICA3MDA6IHtcclxuICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMi4wNDgsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIDkwMDoge1xyXG4gICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLjIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIDEyMDA6IHtcclxuICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMi41LFxyXG4gICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAxNDAwOiB7XHJcbiAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICBcclxuICAgfVxyXG59KTtcclxuIl0sIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJidXJnZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoZWFkZXIiLCJib2R5IiwibWVudSIsInFzIiwiZWxlbWVudCIsIm5ld0VsIiwicWEiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2xvc2VCdXJnZXIiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlIiwidGFyZ2V0IiwiY2xvc2VzdCIsImFkZCIsImlubmVyV2lkdGgiLCJwcmVwZW5kIiwiYXBwZW5kIiwic3BvaWxlcldyYXBwZXIiLCJ0b2dnbGUiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJzdHlsZSIsImhlaWdodCIsInNjcm9sbEhlaWdodCIsImNlb0J0biIsImNlb1dyYXBwZXIiLCJ0ZXh0Q29udGVudCIsInN3aXBlckNhcmRzIiwiU3dpcGVyIiwic3BlZWQiLCJzbGlkZXNQZXJWaWV3IiwiaW5pdGlhbFNsaWRlIiwic2ltdWxhdGVUb3VjaCIsInNwYWNlQmV0d2VlbiIsInN3aXBlckhlcm9DYXJkcyIsImNlbnRlcmVkU2xpZGVzIiwic2xpZGVUb0NsaWNrZWRTbGlkZSIsImJyZWFrcG9pbnRzIiwiNTY4IiwiMTAwMCIsImNvbnRyb2xsZXIiLCJjb250cm9sIiwibGV0IiwiY2FyZHMiLCJjYXJkQ29udGVudCIsImNhcmRzUHJldmlldyIsImNhcmRzUHJldmlld0hlaWdodCIsIm1heFByZXZpZXdIZWlnaHQiLCJmb3JFYWNoIiwicHVzaCIsImVsIiwiTWF0aCIsIm1heCIsImNhcmRCb2R5IiwiY2FyZHNCb2R5SGVpZ2h0IiwibWF4Qm9keUhlaWdodCIsImZpbmFsSGVpZ2h0IiwibmV3UHJldmlld0hlaWdodCIsImNoaWxkcmVuIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJtYXhIZWlnaHQiLCJ0b3AiLCJsb29wIiwicGFnaW5hdGlvbiIsImNsaWNrYWJsZSIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiLCI3MDAiLCI5MDAiLCIxMjAwIiwicG9wdXBSZXZpZXdzIiwiZmVlZGJhY2tCdG4iLCJwb3B1cEZlZWRiYWNrIiwiZmVlZGJhY2tDbG9zZSIsInNldFRpbWVvdXQiLCJyZXZpZXdzUG9wdXBJbWciLCJyZXZpZXdzUG9wdXBWaWRlbyIsInJldmlld3NQb3B1cFRleHQiLCJjaGFuZ2VUZWxlZ3JhbUNvbG9yIiwidHlwZSIsInByZXZlbnREZWZhdWx0IiwicmVtb3ZlU3R5bGVzVXAiLCJyZW1vdmVTdHlsZXNPdXQiLCJjb25zb2xlIiwibG9nIiwiekluZGV4Iiwic2V0QXR0cmlidXRlIiwicGxheSIsIm9wYWNpdHkiLCJzbGlkZXNQZXJHcm91cCIsIjUwMCIsIjYyMCIsIjc0MCIsInRodW1icyIsInN3aXBlciIsIjYwMCIsImZpeFNsaWRlciIsImJ1Z1NsaWRlciIsIm5vcm1hbFNsaWRlciIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNsaWRlclBlckNvbHVtbiIsImRpcmVjdGlvbiIsInNlbGVjdENob29zZSIsInRleHQiLCJ0aGlzIiwiaW5uZXJUZXh0IiwiaXRlbSIsIjE0MDAiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUFBLE9BQU9DLGlCQUFpQixPQUFRLEtBQzdCLE1BQU1DLEVBQVNDLFNBQVNDLGNBQWMsU0FBUyxFQUM1Q0MsRUFBU0YsU0FBU0MsY0FBYyxTQUFTLEVBQ3pDRSxFQUFPSCxTQUFTQyxjQUFjLE1BQU0sRUFDcENHLEVBQU9DLEVBQUcsY0FBYyxFQUMzQixTQUFTQSxFQUFHQyxHQUNMQyxFQUFRUCxTQUFTQyxjQUFjSyxDQUFPLEVBQzFDLEdBQUlDLEVBQU8sT0FBT0EsQ0FDckIsQ0FDQSxTQUFTQyxFQUFHRixHQUNMQyxFQUFRUCxTQUFTUyxpQkFBaUJILENBQU8sRUFDN0MsR0FBSUMsRUFBTyxPQUFPQSxDQUNyQixDQWtDRyxTQUFTRyxJQUVGWCxFQUFPWSxVQUFVQyxTQUFTLFFBQVEsSUFDbkNiLEVBQU9ZLFVBQVVFLE9BQU8sUUFBUSxFQUNoQ1QsRUFBS08sVUFBVUUsT0FBTyxRQUFRLEVBQzlCWCxFQUFPUyxVQUFVRSxPQUFPLFFBQVEsRUFDaENWLEVBQUtRLFVBQVVFLE9BQU8sTUFBTSxFQUM1QmhCLE9BQU9pQixvQkFBb0IsU0FBVUosQ0FBVyxFQUV0RCxDQXNDSCxHQXZFSVgsR0FDREksRUFBS0wsaUJBQWlCLFFBQ3RCLFNBQXNCaUIsR0FDZkEsRUFBRUMsT0FBT0MsUUFBUSxTQUFTLEVBQ3ZCbEIsRUFBT1ksVUFBVUMsU0FBUyxR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
