"use strict";window.addEventListener("load",()=>{const t=document.querySelector(".burger"),s=document.querySelector(".header"),o=document.querySelector("body"),r=e(".header-menu");function e(e){e=document.querySelector(e);if(e)return e}function i(e){e=document.querySelectorAll(e);if(e)return e}function c(){t.classList.contains("active")&&(t.classList.remove("active"),r.classList.remove("active"),s.classList.remove("active"),o.classList.remove("lock"),window.removeEventListener("scroll",c))}t&&o.addEventListener("click",function(e){e.target.closest(".burger")?t.classList.contains("active")?(t.classList.remove("active"),s.classList.remove("active"),r.classList.remove("active"),o.classList.remove("lock")):(t.classList.add("active"),s.classList.add("active"),o.classList.add("lock"),r.classList.add("active"),window.addEventListener("scroll",c)):e.target.closest(".burger")||e.target.closest(".header-menu")||(t.classList.remove("active"),s.classList.remove("active"),r.classList.remove("active"),o.classList.remove("lock"),window.removeEventListener("scroll",c))}),window.innerWidth<1e3?e(".header-top__buttons").prepend(e("#cart")):e(".header-menu__container").append(e("#cart")),e(".spoiler")&&o.addEventListener("click",function(e){{var t;e.target.closest(".spoiler__preview")&&(e.target.closest(".spoiler").classList.toggle("opened"),t=e.target.closest(".spoiler__preview").nextElementSibling,e.target.closest(".spoiler").classList.contains("opened")?t.style.height=t.scrollHeight+"px":t.style.height=null)}});new Swiper(".hero__swiper-cards",{speed:500,slidesPerView:1.75,initialSlide:1,centeredSlides:!0,slideToClickedSlide:!0,breakpoints:{568:{slidesPerView:2.25},1e3:{slidesPerView:3}}});let n=i(".cards .card");var a=i(".cards .card__content"),l=i(".cards .card .card__preview");let d=[],v=(l.forEach(e=>{d.push(e.scrollHeight)}),Math.max(...d));l=i(".cards .card__body");let u=[],p=(l.forEach(e=>{u.push(e.scrollHeight)}),Math.max(...u)),m=v;function L(e){"pointerdown"==e.type?e.target.closest(".footer-top__subscribe a")&&(e.preventDefault(),i(".footer-top__subscribe .not")[0].classList.remove("hover"),i(".footer-top__subscribe .not")[1].classList.remove("hover"),i(".footer-top__subscribe .not")[0].classList.add("clicked"),i(".footer-top__subscribe .not")[1].classList.add("clicked"),document.body.addEventListener("pointerup",b)):"pointerover"==e.type&&e.target.closest(".footer-top__subscribe a")&&(i(".footer-top__subscribe .not")[0].classList.add("hover"),i(".footer-top__subscribe .not")[1].classList.add("hover"),document.body.addEventListener("pointerdown",L),document.body.addEventListener("pointerout",_))}function b(e){console.log("up"),i(".footer-top__subscribe .not")[0].classList.remove("clicked"),i(".footer-top__subscribe .not")[1].classList.remove("clicked"),document.body.removeEventListener("pointerdown",L),document.body.removeEventListener("pointerup",b),document.body.removeEventListener("pointerout",_)}function _(e){i(".footer-top__subscribe .not")[0].classList.remove("hover"),i(".footer-top__subscribe .not")[1].classList.remove("hover"),document.body.removeEventListener("pointerdown",L),document.body.removeEventListener("pointerout",_)}n.forEach(e=>{e.style.height=v+p+"px"}),o.addEventListener("pointerover",function(e){if(e.target.closest(".card")){let s=e.target.closest(".card").children[1].firstElementChild.scrollHeight;s>m&&n.forEach(e=>{var t=s+p;m=s,e.style.height=t+"px"})}}),a.forEach(e=>{e.style.top=`calc(100% - ${v}px)`}),document.body.addEventListener("pointerover",L)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
